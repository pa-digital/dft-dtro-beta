openapi: 3.0.1
info:
  title: D-TRO
  description: Digital Traffic Regulation Order
  termsOfService: https://cloud.google.com/terms
  contact:
    name: Jon Doe
    url: https://contact-url.com
    email: jon@doe.com
  license:
    name: DfT
    url: https://license-url.com
  version: 0.0.1
servers:
  - url: 'https://dtro-integration.dft.gov.uk'
paths:
  /v1/dtros/{id}:
    get:
      tags:
        - DTROs
      summary: Gets a D-TRO by its ID
      operationId: get-dtro
      parameters:
        - name: id
          in: path
          description: ID of the D-TRO to retrieve.
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Correlation-ID
          in: header
          required: true
          schema:
            type: string
            description: UUID formatted string to track the request through the enquiries stack.
            default: 41ae0471-d7de-4737-907f-cab2f0089796
      responses:
        '200':
          description: OK.
        '400':
          description: Bad Request.
        '500':
          description: Internal Server Error.
  /v1/dtros/sourceHistory/{dtroId}:
    get:
      tags:
        - DTROs
      summary: Retrieve the Source History for existing D-TROs
      operationId: get-dtro-source-history
      parameters:
        - name: dtroId
          in: path
          description: ID of the D-TRO to retrieve source history for.
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Correlation-ID
          in: header
          required: true
          schema:
            type: string
            description: UUID formatted string to track the request through the enquiries stack.
            default: 41ae0471-d7de-4737-907f-cab2f0089796
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: #/components/schemas/DfT.DTRO.Models.DtroHistory.DtroHistorySourceResponse
        '400':
          description: Bad Request.
        '404':
          description: Not found.
        '500':
          description: Internal Server Error.
  /v1/dtros/provisionHistory/{dtroId}:
    get:
      tags:
        - DTROs
      summary: Retrieve the Provision History for existing D-TROs
      operationId: get-dtro-provision-history
      parameters:
        - name: dtroId
          in: path
          description: ID of the D-TRO to retrieve provision history for.
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Correlation-ID
          in: header
          required: true
          schema:
            type: string
            description: UUID formatted string to track the request through the enquiries stack.
            default: 41ae0471-d7de-4737-907f-cab2f0089796
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: #/components/schemas/DfT.DTRO.Models.DtroHistory.DtroHistoryProvisionResponse
        '400':
          description: Bad Request.
        '404':
          description: Not found.
        '500':
          description: Internal Server Error.
  /v1/events:
    post:
      tags:
        - Events
      summary: Retrieve all data store events
      operationId: get-dtro-events
      parameters:
        - name: X-Correlation-ID
          in: header
          required: true
          schema:
            type: string
            description: UUID formatted string to track the request through the enquiries stack.
            default: 41ae0471-d7de-4737-907f-cab2f0089796
      requestBody:
        description: A search query object
        content:
          application/json-patch+json:
            schema:
              $ref: #/components/schemas/DfT.DTRO.Models.DtroEvent.DtroEventSearch
          application/json:
            schema:
              $ref: #/components/schemas/DfT.DTRO.Models.DtroEvent.DtroEventSearch
          text/json:
            schema:
              $ref: #/components/schemas/DfT.DTRO.Models.DtroEvent.DtroEventSearch
          application/*+json:
            schema:
              $ref: #/components/schemas/DfT.DTRO.Models.DtroEvent.DtroEventSearch
          application/xml:
            schema:
              $ref: #/components/schemas/DfT.DTRO.Models.DtroEvent.DtroEventSearch
          text/xml:
            schema:
              $ref: #/components/schemas/DfT.DTRO.Models.DtroEvent.DtroEventSearch
          application/*+xml:
            schema:
              $ref: #/components/schemas/DfT.DTRO.Models.DtroEvent.DtroEventSearch
      responses:
        '200':
          description: Successfully received the event list
          content:
            text/plain:
              schema:
                $ref: #/components/schemas/DfT.DTRO.Models.DtroEvent.DtroEventSearchResult
            application/json:
              schema:
                $ref: #/components/schemas/DfT.DTRO.Models.DtroEvent.DtroEventSearchResult
            text/json:
              schema:
                $ref: #/components/schemas/DfT.DTRO.Models.DtroEvent.DtroEventSearchResult
            application/xml:
              schema:
                $ref: #/components/schemas/DfT.DTRO.Models.DtroEvent.DtroEventSearchResult
            text/xml:
              schema:
                $ref: #/components/schemas/DfT.DTRO.Models.DtroEvent.DtroEventSearchResult
        '400':
          description: The request was malformed.
        '404':
          description: Not found.
        '500':
          description: Internal Server Error.
  /v1/healthApi:
    get:
      tags:
        - Metrics
      summary: Check API health.
      operationId: check-api-health
      parameters:
        - name: X-Correlation-ID
          in: header
          required: true
          schema:
            type: string
            description: UUID formatted string to track the request through the enquiries stack.
            default: 41ae0471-d7de-4737-907f-cab2f0089796
      responses:
        '200':
          description: The API is up and running.
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        '500':
          description: Api server error.
  /v1/healthDatabase:
    get:
      tags:
        - Metrics
      summary: Check database health.
      operationId: check-db-health
      parameters:
        - name: X-Correlation-ID
          in: header
          required: true
          schema:
            type: string
            description: UUID formatted string to track the request through the enquiries stack.
            default: 41ae0471-d7de-4737-907f-cab2f0089796
      responses:
        '200':
          description: Database is available.
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        '404':
          description: Database is not available.
        '500':
          description: Api server error.
  /v1/rules/versions:
    get:
      tags:
        - Rules
      summary: Get rule template versions.
      operationId: get-rule-versions
      parameters:
        - name: X-Correlation-ID
          in: header
          required: true
          schema:
            type: string
            description: UUID formatted string to track the request through the enquiries stack.
            default: 41ae0471-d7de-4737-907f-cab2f0089796
      responses:
        '200':
          description: OK.
        '400':
          description: Bad Request.
        '404':
          description: Not found.
        '500':
          description: Internal Server Error.
  /v1/rules:
    get:
      tags:
        - Rules
      summary: Get rule templates.
      operationId: get-rules
      parameters:
        - name: X-Correlation-ID
          in: header
          required: true
          schema:
            type: string
            description: UUID formatted string to track the request through the enquiries stack.
            default: 41ae0471-d7de-4737-907f-cab2f0089796
      responses:
        '200':
          description: OK.
        '400':
          description: Bad Request.
        '404':
          description: Not found.
        '500':
          description: Internal Server Error.
  /v1/rules/{version}:
    get:
      tags:
        - Rules
      summary: Get rule template by its rule version
      operationId: get-rule-by-version
      parameters:
        - name: version
          in: path
          description: Rule version by which rule template to retrieve.
          required: true
          schema:
            type: string
        - name: X-Correlation-ID
          in: header
          required: true
          schema:
            type: string
            description: UUID formatted string to track the request through the enquiries stack.
            default: 41ae0471-d7de-4737-907f-cab2f0089796
      responses:
        '200':
          description: OK.
        '400':
          description: Bad Request.
        '404':
          description: Not found.
        '500':
          description: Internal Server Error.
  /v1/rules/{id}:
    get:
      tags:
        - Rules
      summary: Get rule template by its ID
      operationId: get-rule-by-id
      parameters:
        - name: id
          in: path
          description: ID of the rule template to retrieve.
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Correlation-ID
          in: header
          required: true
          schema:
            type: string
            description: UUID formatted string to track the request through the enquiries stack.
            default: 41ae0471-d7de-4737-907f-cab2f0089796
      responses:
        '200':
          description: OK.
        '400':
          description: Bad Request.
        '404':
          description: Not found.
        '500':
          description: Internal Server Error.
  /v1/schemas/versions:
    get:
      tags:
        - Schemas
      summary: Get schema template versions.
      operationId: get-schema-versions
      parameters:
        - name: X-Correlation-ID
          in: header
          required: true
          schema:
            type: string
            description: UUID formatted string to track the request through the enquiries stack.
            default: 41ae0471-d7de-4737-907f-cab2f0089796
      responses:
        '200':
          description: OK.
        '400':
          description: Bad Request.
        '404':
          description: Not found.
        '500':
          description: Internal Server Error.
  /v1/schemas:
    get:
      tags:
        - Schemas
      summary: Get schema templates.
      operationId: get-schemas
      parameters:
        - name: X-Correlation-ID
          in: header
          required: true
          schema:
            type: string
            description: UUID formatted string to track the request through the enquiries stack.
            default: 41ae0471-d7de-4737-907f-cab2f0089796
      responses:
        '200':
          description: OK.
        '400':
          description: Bad Request.
        '404':
          description: Not found.
        '500':
          description: Internal Server Error.
  /v1/schemas/{version}:
    get:
      tags:
        - Schemas
      summary: Get schema template by its schema version
      operationId: get-schema-by-version
      parameters:
        - name: version
          in: path
          description: Schema version by which schema template to retrieve.
          required: true
          schema:
            type: string
        - name: X-Correlation-ID
          in: header
          required: true
          schema:
            type: string
            description: UUID formatted string to track the request through the enquiries stack.
            default: 41ae0471-d7de-4737-907f-cab2f0089796
      responses:
        '200':
          description: OK.
        '400':
          description: Bad Request.
        '404':
          description: Not found.
        '500':
          description: Internal Server Error.
  /v1/schemas/{id}:
    get:
      tags:
        - Schemas
      summary: Get schema template by its ID
      operationId: get-schema-by-id
      parameters:
        - name: id
          in: path
          description: ID of the schema template to retrieve.
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Correlation-ID
          in: header
          required: true
          schema:
            type: string
            description: UUID formatted string to track the request through the enquiries stack.
            default: 41ae0471-d7de-4737-907f-cab2f0089796
      responses:
        '200':
          description: OK.
        '400':
          description: Bad Request.
        '404':
          description: Not found.
        '500':
          description: Internal Server Error.
  /v1/search:
    post:
      tags:
        - Search
      summary: Finds existing D-TROs that match the required criteria.
      operationId: search-dtro
      parameters:
        - name: X-Correlation-ID
          in: header
          required: true
          schema:
            type: string
            description: UUID formatted string to track the request through the enquiries stack.
            default: 41ae0471-d7de-4737-907f-cab2f0089796
      requestBody:
        description: A D-TRO object search criteria.
        content:
          application/json:
            schema:
              $ref: #/components/schemas/DfT.DTRO.Models.Filtering.DtroSearch
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: #/components/schemas/DfT.DTRO.Models.Pagination.PaginatedResponse
        '400':
          description: Bad Request.
        '404':
          description: Not found.
        '500':
          description: Internal Server Error.
  /v1/oauth-generator:
    post:
      summary: Generate OAuth 2.0 Token (Client Credentials)
      operationId: oauth-generator
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  enum:
                    - client_credentials
                  description: The OAuth 2.0 grant type.
              required:
                - grant_type
      security:
        - clientCredentials: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  refresh_token_expires_in:
                    type: string
                    description: The expiration time of the refresh token in seconds, typically "0" for client credentials.
                  api_product_list:
                    type: string
                    description: A comma-separated string of products associated with the token.
                  api_product_list_json:
                    type: array
                    items:
                      type: string
                    description: A list of API products associated with the token in JSON format.
                  organization_name:
                    type: string
                    description: The organization name.
                  developer_email:
                    type: string
                    description: The email of the developer.
                  token_type:
                    type: string
                    description: The type of token, typically "BearerToken".
                  issued_at:
                    type: string
                    description: The timestamp (in milliseconds) when the token was issued.
                  client_id:
                    type: string
                    description: The client ID that was used to generate the token.
                  access_token:
                    type: string
                    description: The OAuth 2.0 access token.
                  application_name:
                    type: string
                    description: The name of the application or its ID.
                  scope:
                    type: string
                    description: The scope of the access granted by the token.
                  expires_in:
                    type: string
                    description: The lifetime of the token in seconds.
                  refresh_count:
                    type: string
                    description: The number of times the refresh token has been used, typically "0" for client credentials.
                  status:
                    type: string
                    description: The approval status of the token.
        '400':
          description: Invalid request
        '401':
          description: Unauthorized (invalid credentials)
        '404':
          description: Not found.
components:
  schemas:
    DfT.DTRO.Models.DtroDtos.DtroResponse:
      type: object
      properties:
        schemaVersion:
          $ref: '#/components/schemas/DfT.DTRO.Models.SchemaTemplate.SchemaVersion'
        data:
          type: object
          additionalProperties: {}
          description: D-TRO data model response.
          nullable: true
      additionalProperties: false
      description: D-TRO data response.
    DfT.DTRO.Models.DtroDtos.DtroSubmit:
      required:
        - data
        - schemaVersion
      type: object
      properties:
        schemaVersion:
          $ref: #/components/schemas/DfT.DTRO.Models.SchemaTemplate.SchemaVersion
        data:
          type: object
          additionalProperties: {}
          description: D-TRO data model request.
      additionalProperties: false
      description: D-TRO data request.
    DfT.DTRO.Models.DtroEvent.DtroEvent:
      type: object
      properties:
        publicationTime:
          type: string
          description: Date and time the D-TRO was published.
          format: date-time
        traCreator:
          type: integer
          description: Traffic Authority Regulation that created the D-TRO.
          format: int32
        currentTraOwner:
          type: integer
          description: Traffic Authority Regulation that owns the D-TRO.
          format: int32
        troName:
          type: string
          description: Traffic Regulation Order name.
          nullable: true
        regulationType:
          type: array
          items:
            type: string
          description: Regulation type of the traffic regulation order.
          nullable: true
        vehicleType:
          type: array
          items:
            type: string
          description: Vehicle type.
          nullable: true
        orderReportingPoint:
          type: array
          items:
            type: string
          nullable: true
        regulationStart:
          type: array
          items:
            type: string
            format: date-time
          nullable: true
        regulationEnd:
          type: array
          items:
            type: string
            format: date-time
          nullable: true
        eventType:
          $ref: #/components/schemas/DfT.DTRO.Models.DtroEvent.DtroEventType
        eventTime:
          type: string
          format: date-time
        _links:
          $ref: #/components/schemas/DfT.DTRO.Models.Search.Links
      additionalProperties: false
      description: Record representing a change event in the D-TRO service.
    DfT.DTRO.Models.DtroEvent.DtroEventSearch:
      required:
        - page
        - pageSize
        - since
      type: object
      properties:
        page:
          maximum: 2147483647
          minimum: 1
          type: integer
          format: int32
        pageSize:
          maximum: 50
          minimum: 1
          type: integer
          format: int32
        since:
          type: string
          format: date-time
        traCreator:
          type: integer
          format: int32
          nullable: true
        currentTraOwner:
          type: integer
          format: int32
          nullable: true
        troName:
          type: string
          nullable: true
        regulationType:
          type: string
          nullable: true
        vehicleType:
          type: string
          nullable: true
        orderReportingPoint:
          type: string
          nullable: true
        location:
          $ref: #/components/schemas/DfT.DTRO.Models.DtroJson.Location
        regulationStart:
          $ref: #/components/schemas/DfT.DTRO.Models.Filtering.ValueCondition
        regulationEnd:
          $ref: #/components/schemas/DfT.DTRO.Models.Filtering.ValueCondition
      additionalProperties: false
    DfT.DTRO.Models.DtroEvent.DtroEventSearchResult:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: #/components/schemas/DfT.DTRO.Models.DtroEvent.DtroEvent
          nullable: true
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
      additionalProperties: false
    DfT.DTRO.Models.DtroEvent.DtroEventType:
      enum:
        - create
        - update
        - delete
      type: string
    DfT.DTRO.Models.DtroHistory.DtroHistoryProvisionResponse:
      type: object
      properties:
        actionType:
          type: string
          nullable: true
        created:
          type: string
          format: date-time
          nullable: true
        data:
          type: object
          additionalProperties: {}
          nullable: true
        lastUpdated:
          type: string
          format: date-time
          nullable: true
        reference:
          type: string
          nullable: true
        schemaVersion:
          type: string
          nullable: true
      additionalProperties: false
    DfT.DTRO.Models.DtroHistory.DtroHistorySourceResponse:
      type: object
      properties:
        actionType:
          type: string
          nullable: true
        created:
          type: string
          format: date-time
          nullable: true
        lastUpdated:
          type: string
          format: date-time
          nullable: true
        reference:
          type: string
          nullable: true
        schemaVersion:
          type: string
          nullable: true
        section:
          type: string
          nullable: true
        trafficAuthorityCreatorId:
          type: integer
          format: int32
        trafficAuthorityOwnerId:
          type: integer
          format: int32
        troName:
          type: string
          nullable: true
      additionalProperties: false
    DfT.DTRO.Models.DtroJson.BoundingBox:
      maxItems: 4
      minItems: 4
      type: array
      items:
        type: number
        format: double
      additionalProperties: false
      example:
        - -103976.3
        - -16703.87
        - 652897.98
        - 1199851.44
    DfT.DTRO.Models.DtroJson.Location:
      required:
        - bbox
        - crs
      type: object
      properties:
        crs:
          minLength: 1
          pattern: ^(?:osgb36Epsg27700|wgs84Epsg4326)$
          type: string
        bbox:
          $ref: #/components/schemas/DfT.DTRO.Models.DtroJson.BoundingBox
      additionalProperties: false
    DfT.DTRO.Models.Filtering.ComparisonOperator:
      enum:
        - '='
        - '>'
        - '>='
        - <
        - <=
      type: string
    DfT.DTRO.Models.Filtering.DtroSearch:
      required:
        - page
        - pageSize
      type: object
      properties:
        queries:
          minItems: 1
          type: array
          items:
            $ref: #/components/schemas/DfT.DTRO.Models.Filtering.SearchQuery
          nullable: true
        page:
          maximum: 2147483647
          minimum: 1
          type: integer
          format: int32
        pageSize:
          maximum: 50
          minimum: 1
          type: integer
          format: int32
      additionalProperties: false
    DfT.DTRO.Models.Filtering.SearchQuery:
      type: object
      properties:
        location:
          $ref: #/components/schemas/DfT.DTRO.Models.DtroJson.Location
        publicationTime:
          type: string
          format: date-time
          nullable: true
        modificationTime:
          type: string
          format: date-time
          nullable: true
        deletionTime:
          type: string
          format: date-time
          nullable: true
        traCreator:
          type: integer
          format: int32
          nullable: true
        currentTraOwner:
          type: integer
          format: int32
          nullable: true
        troName:
          maxLength: 500
          minLength: 0
          type: string
          nullable: true
        regulationType:
          maxLength: 60
          minLength: 0
          type: string
          nullable: true
        vehicleType:
          maxLength: 40
          minLength: 0
          type: string
          nullable: true
        orderReportingPoint:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        regulationStart:
          $ref: #/components/schemas/DfT.DTRO.Models.Filtering.ValueCondition
        regulationEnd:
          $ref: #/components/schemas/DfT.DTRO.Models.Filtering.ValueCondition
      additionalProperties: false
    DfT.DTRO.Models.Filtering.ValueCondition:
      required:
        - operator
        - value
      type: object
      properties:
        operator:
          $ref: #/components/schemas/DfT.DTRO.Models.Filtering.ComparisonOperator
        value:
          type: string
          format: date-time
      additionalProperties: false
    DfT.DTRO.Models.Metrics.FullMetricSummary:
      type: object
      properties:
        forDate:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        systemFailureCount:
          type: integer
          format: int32
        submissionFailureCount:
          type: integer
          format: int32
        submissionCount:
          type: integer
          format: int32
        deletionCount:
          type: integer
          format: int32
        searchCount:
          type: integer
          format: int32
        eventCount:
          type: integer
          format: int32
      additionalProperties: false
    DfT.DTRO.Models.Metrics.MetricRequest:
      type: object
      properties:
        dtroUserId:
          type: string
          format: uuid
          nullable: true
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        userGroup:
          $ref: #/components/schemas/UserGroup
      additionalProperties: false
    DfT.DTRO.Models.Metrics.MetricSummary:
      type: object
      properties:
        systemFailureCount:
          type: integer
          format: int32
        submissionFailureCount:
          type: integer
          format: int32
        submissionCount:
          type: integer
          format: int32
        deletionCount:
          type: integer
          format: int32
        searchCount:
          type: integer
          format: int32
        eventCount:
          type: integer
          format: int32
      additionalProperties: false
    DfT.DTRO.Models.Pagination.PaginatedResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: #/components/schemas/DfT.DTRO.Models.Search.DtroSearchResult
          nullable: true
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
      additionalProperties: false
    DfT.DTRO.Models.SchemaTemplate.SchemaVersion:
      type: object
      additionalProperties: false
    DfT.DTRO.Models.Search.DtroSearchResult:
      type: object
      properties:
        troName:
          type: string
          nullable: true
        publicationTime:
          type: string
          format: date-time
        trafficAuthorityCreatorId:
          type: integer
          format: int64
        trafficAuthorityOwnerId:
          type: integer
          format: int64
        regulationType:
          type: array
          items:
            type: string
          nullable: true
        vehicleType:
          type: array
          items:
            type: string
          nullable: true
        orderReportingPoint:
          type: array
          items:
            type: string
          nullable: true
        regulationStart:
          type: array
          items:
            type: string
            format: date-time
          nullable: true
        regulationEnd:
          type: array
          items:
            type: string
            format: date-time
          nullable: true
        id:
          type: string
          format: uuid
      additionalProperties: false
    DfT.DTRO.Models.Search.Links:
      type: object
      properties:
        self:
          type: string
          nullable: true
      additionalProperties: false
    DfT.DTRO.Models.SharedResponse.GuidResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
      additionalProperties: false
    DfT.DTRO.Models.SwaCode.DtroUserRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        traId:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
        prefix:
          type: string
          nullable: true
        userGroup:
          $ref: #/components/schemas/UserGroup
        xAppId:
          type: string
          format: uuid
      additionalProperties: false
    DfT.DTRO.Models.SwaCode.DtroUserResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        xAppId:
          type: string
          format: uuid
        traId:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
        prefix:
          type: string
          nullable: true
        userGroup:
          $ref: #/components/schemas/UserGroup
      additionalProperties: false
    DfT.DTRO.Models.SystemConfig.SystemConfigRequest:
      type: object
      properties:
        systemName:
          type: string
          nullable: true
        isTest:
          type: boolean
      additionalProperties: false
    DfT.DTRO.Models.SystemConfig.SystemConfigResponse:
      type: object
      properties:
        systemName:
          type: string
          nullable: true
        currentUserName:
          type: string
          nullable: true
        isTest:
          type: boolean
      additionalProperties: false
    UserGroup:
      type: object
      properties:
        traId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        prefix:
          type: string
          nullable: true
        isAdmin:
          type: boolean
        isActive:
          type: boolean
      additionalProperties: false
