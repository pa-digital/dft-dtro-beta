@page
@model SystemConfigEditModel
@{
    var initialSystemName = Model.SystemConfig.SystemName;
    var initialIsTest = Model.SystemConfig.IsTest ? "true" : "false";
}

<h2>SystemConfig</h2>

<form method="post" class="form-horizontal">
    <div style="max-width:600px; margin-top:20px">
        <div class="form-group row" style="margin-top:10px">
            <label for="SystemName" class="col-sm-4 col-form-label single-line-label">System Name</label>
            <div class="col-sm-8">
                <input type="text" style="max-width:140px" class="form-control" id="SystemName" name="SystemConfig.SystemName" value="@Model.SystemConfig.SystemName" required />
            </div>
        </div>

        <div class="form-group row" style="margin-top:10px">
            <label for="isTest" class="col-sm-4 col-form-label">Is Test</label>
            <div class="col-sm-8">
                <input style="margin-top:12px" type="checkbox" id="isTestCheckbox" @(Model.SystemConfig.IsTest ? "checked" : "") />
                <input type="hidden" id="isTest" name="SystemConfig.IsTest" value="@Model.SystemConfig.IsTest.ToString().ToLower()" />
            </div>
        </div>

        <div class="form-group row" style="margin-top:20px">
            <div class="col-sm-8 offset-sm-4 text-right">
                <button id="saveButton" class="btn btn-primary" type="submit" disabled>Update</button>
                <button id="cancelButton" class="btn btn-secondary" type="button">Cancel</button>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.querySelector('form');
            const saveButton = document.getElementById("saveButton");
            const cancelButton = document.getElementById("cancelButton");
            const requiredFields = document.querySelectorAll("input[required]");
            const isTestCheckbox = document.getElementById("isTestCheckbox");
            const isTestHiddenField = document.getElementById("isTest");

            // Store the initial values
            const initialSystemName = "@initialSystemName";
            const initialIsTest = "@initialIsTest";

            function updateSaveButtonState() {
                const currentSystemName = document.getElementById('SystemName').value.trim();
                const currentIsTest = isTestCheckbox.checked ? "true" : "false";

                // Update the hidden field
                isTestHiddenField.value = currentIsTest;

                // Check if values have changed
                const hasChanges = (currentSystemName !== initialSystemName) || (currentIsTest !== initialIsTest);
                saveButton.disabled = !hasChanges;
            }

            // Initial setup
            updateSaveButtonState(); // Ensure button state is set on load

            // Add event listeners to fields
            document.getElementById('SystemName').addEventListener('input', updateSaveButtonState);
            isTestCheckbox.addEventListener('change', updateSaveButtonState);

            cancelButton.addEventListener('click', function () {
                const cancelInput = document.createElement('input');
                cancelInput.type = 'hidden';
                cancelInput.name = 'action';
                cancelInput.value = 'Cancel';
                form.appendChild(cancelInput);
                form.submit();
            });
        });
    </script>
}
