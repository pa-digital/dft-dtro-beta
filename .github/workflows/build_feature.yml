name: Build Feature Branch

on:
  workflow_dispatch:
  push:
    branches:
      - feature/*
      - bug/*
      - hotfix/*
      - DPPB*

permissions:
  contents: read
  packages: read
  actions: read

jobs:
  build-feature:
    name: Build, Test and Verify Feature Branch
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: read
      actions: read
    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.INTEGRATION_TEST_DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.INTEGRATION_TEST_DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.INTEGRATION_TEST_DB_NAME }}
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.x"

      - name: Install EF Core Tools
        run: dotnet tool install --global dotnet-ef --version 8.0.0

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      # - name: Unit tests
      #   run: |
      #     pushd Src/Dft.DTRO.Tests
      #     dotnet test --verbosity normal
      #     popd

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "PostgreSQL is ready"
              break
            fi
            echo "Waiting for PostgreSQL..."
            sleep 5
          done

      - name: Integration tests
        env:
          ConnectionStrings__DefaultConnection: "Host=localhost;Port=5432;Database=${{ secrets.INTEGRATION_TEST_DB_NAME }};Username=${{ secrets.INTEGRATION_TEST_DB_USER }};Password=${{ secrets.INTEGRATION_TEST_DB_PASSWORD }}"
        run: |
          pushd Src/DfT.DTRO
          dotnet ef database update
          dotnet run &
          npm install -g wait-on
          echo "Waiting for https://127.0.0.1:5001/index.html to be up..."
          # for i in {1..60}; do
          #   curl -k --output /dev/null --silent --head --fail https://127.0.0.1:5001/index.html && break
          #   echo "Still waiting..."
          #   sleep 5
          # done
          wait-on https://127.0.0.1:5001/index.html --timeout 60000 --interval 5000 --insecure
          echo "Server is up!"

          popd
          pushd Src/DfT.DTRO.IntegrationTests
          dotnet test
          popd

      - name: Format check
        run: dotnet format

      - name: Install .NET analyzers
        run: dotnet tool install -g dotnet-format

      - name: Run .NET analyzers
        run: dotnet build --no-restore --configuration Release
