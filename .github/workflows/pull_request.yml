name: Pull Request

on:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  packages: read
  actions: read

jobs:
  build-feature:
    name: Build, Test and Verify Feature Branch
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: read
      actions: read
    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.INTEGRATION_TEST_DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.INTEGRATION_TEST_DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.INTEGRATION_TEST_DB_NAME }}
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Check code formatting
        run: |
          dotnet format --verify-no-changes

      - name: Install EF Core Tools
        run: dotnet tool install --global dotnet-ef --version 8.0.0

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Unit tests
        id: unit-tests
        run: |
          ./run_unit_tests_with_coverage.sh

      - name: Upload unit test coverage report
        if: steps.unit-tests.outcome != 'skipped'
        uses: actions/upload-artifact@v4
        with:
          name: Unit test coverage report
          path: TestReports/UnitTests
      
      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "PostgreSQL is ready"
              break
            fi
            echo "Waiting for PostgreSQL..."
            sleep 5
          done

      - name: Integration tests
        id: integration-tests
        env:
          ConnectionStrings__DefaultConnection: "Host=localhost;Port=5432;Database=${{ secrets.INTEGRATION_TEST_DB_NAME }};Username=${{ secrets.INTEGRATION_TEST_DB_USER }};Password=${{ secrets.INTEGRATION_TEST_DB_PASSWORD }}"
        run: |
          ./Src/DfT.DTRO.IntegrationTests/ci_scripts/run_integration_tests_against_localhost_on_ci.sh

      - name: Upload integration test results
        if: always() && steps.integration-tests.outcome != 'skipped'
        uses: actions/upload-artifact@v4
        with:
          name: Integration test results
          path: Src/DfT.DTRO.IntegrationTests/TestResults/test-results.html
