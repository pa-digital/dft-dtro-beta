name: Activate User's Application - INT

on:
  workflow_dispatch:
    inputs:
      app-name:
        type: string
        description: Name of the application to activate
        required: true
      app-id:
        type: string
        description: ID of the application to activate
        required: true
      dev-email:
        type: string
        description: Email address of developer the application belongs to
        required: true
      is-publisher:
        type: boolean
        description: Is application for Publisher?
        required: true
        default: false
      swa-code:
        type: string
        description: Enter the SWA CODE(TRA ID) linked to the Publishers (enter 'null' for Consumers)
        required: true

permissions:
  contents: read
  packages: read
  actions: read

jobs:
  activate-user-app:
    name: Activate User's Application
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: read
      actions: read
      pull-requests: write
    defaults:
      run:
        shell: bash
        working-directory: apigee/scripts
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name:  Make scripts executable
        run: chmod +x *.sh

      - name: Mask variables
        run: |
          echo "::add-mask::${DEV_EMAIL}"
          echo "::add-mask::${APP_NAME}"
          echo "::add-mask::${APP_ID}"
          echo "::add-mask::${IS_PUBLISHER}"
          echo "::add-mask::${SWA_CODE}"
        env:
          DEV_EMAIL: ${{ inputs.dev-email }}
          APP_ID: ${{ inputs.app-id }}
          APP_NAME: ${{ inputs.app-name }}
          IS_PUBLISHER: ${{ inputs.is-publisher }}
          SWA_CODE: ${{ inputs.swa-code }}

      - name: Load Env Vars for Apigee script
        run: |
          echo "workload_identity_service_account=${{ secrets.WIP_SERVICE_ACCOUNT_TEST }}" >> $GITHUB_ENV 
          echo "apigee_organisation=${{ vars.GCP_PROJECT_ID_TEST }}" >> $GITHUB_ENV
          echo "CLIENT_ID=${{ secrets.CSO_CLIENT_ID_INT }}" >> $GITHUB_ENV
          echo "CLIENT_SECRET=${{ secrets.CSO_CLIENT_SECRET_INT }}" >> $GITHUB_ENV
          echo "DOMAIN=dtro-integration" >> $GITHUB_ENV

      - name: Authenticate to Google Cloud
        id: google-auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_TEST }}
          service_account: ${{ secrets.WIP_SERVICE_ACCOUNT_TEST }}
          token_format: access_token

      - name: Set up ApigeeCLI
        run: |
          curl -L https://raw.githubusercontent.com/apigee/apigeecli/main/downloadLatest.sh | sh
          echo "$HOME/.apigeecli/bin" >> $GITHUB_PATH
          echo "APIGEECLI_DEBUG=true" >> $GITHUB_ENV

      - name: Activate User's Application
        env:
          DEV_EMAIL: ${{ inputs.dev-email }}
          APP_NAME: ${{ inputs.app_name }}
        run: |
          export DEV_EMAIL="$DEV_EMAIL" APP_NAME="$APP_NAME"
          ./activate_user_app.sh ${{ steps.google-auth.outputs.access_token }}

      - name: Register User into D-TRO
        env:
          SWA_CODE: ${{ inputs.swa-code }}
          APP_ID: ${{ inputs.app-id }}
          Is_PUBLISHER: ${{ inputs.is-publisher }}
        run: |
          export SWA_CODE="$SWA_CODE" APP_ID="$APP_ID" IS_PUBLISHER="$IS_PUBLISHER"
          ./register_user_in_dtro.sh
