name: Build Feature

on:
  workflow_call:
    secrets:
      WORKLOAD_IDENTITY_PROVIDER:
        required: true
    inputs:
      gcp-project-id:
        type: string
        required: true
      gcp-region:
        type: string
        required: true
      environment:
        type: string
        required: true
      gcp-ar-dtro-repo:
        type: string
        required: true
      dtro-image-name:
        type: string
        required: true

env:
  GITHUB_PACKAGES_TOKEN: ${{ secrets.github_packages_token }}
  gcp_service_account: create-application@${{ inputs.gcp-project-id }}.iam.gserviceaccount.com
  gcp_region: ${{ inputs.default_gcp_region }}
  ar_repo_url: ${{ inputs.gcp-region }}-docker.pkg.dev/${{ inputs.gcp-project-id }}/${{ vars.gcp-ar-dtro-repo }}/${{ vars.dtro-image-name }}:latest


permissions:
  contents: read
  packages: read
  actions: read

jobs:
  deploy-dtro:
    name: Deploy DTRO GCP Application ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
      packages: read
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # TODO: Google recommend approach, need to be configured on GCP
      - name: Configure GCP credentials
        id: google-creds
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ inputs.gcp-project-id }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }} # https://github.com/google-github-actions/auth/blob/main/docs/EXAMPLES.md#direct-workload-identity-federation

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.2

      - name: Terraform Init
        run: terraform init

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: europe-west1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.google-creds.outputs.access_token }}

      - name: Get tag
        id: get-tag
        run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

      - name: Build, Tag and push Docker image to Google Artifact Registry
        uses: docker/build-push-action@v4
        with:
          context: ./src/application
          file: ./src/application/Dockerfile
          provenance: false
          push: true
          tags: |
            ${{ env.ar_repo_url }}:${{ github.sha }}
            ${{ env.ar_repo_url }}:latest
          build-args: GITHUB_PACKAGES_TOKEN=${{ env.GITHUB_PACKAGES_TOKEN }}

      - name: Deploy to CloudRun
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: d-tro-${{ inputs.environment }}
          image: ${{ env.ar_repo_url }}
